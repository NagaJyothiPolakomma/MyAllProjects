<data transports="http https" serviceGroup="" serviceNamespace="" name="NotificationsDS" serviceStatus="active">
  <description />
  <resource method="GET" path="/notifications">
    <description />
    <call-query href="getAll" />
  </resource>
  <resource method="GET" path="/notifications1">
    <description />
    <call-query href="getById">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <config id="MySQLConnection">
    <property name="driverClassName">com.mysql.cj.jdbc.Driver</property>
    <property name="url">jdbc:mysql://localhost:3306/notifications?useSSL=false</property>
    <property name="username">root</property>
    <property name="password">Jyothi@2000</property>
  </config>
  <query id="getAll" useConfig="MySQLConnection">
    <sql>SELECT template_id, template_name, language_id, is_dynamic, template_content, parameters, is_enabled, updated_on FROM notificationtemplates</sql>
    <result useColumnNumbers="true" outputType="json">{
  "Notifications":{
    "Notification":[{
      "template_id":"$1",
      "template_name":"$2",
      "language_id":"$3",
      "is_dynamic":"$4",
      "template_content":"$5",
      "parameters":"$6",
      "is_enabled":"$7",
      "updated_on":"$8"
    }
    ]}
}</result>
  </query>
  <query id="getById" useConfig="MySQLConnection">
    <sql>SELECT template_id, template_name, language_id, is_dynamic, template_content, parameters, is_enabled, updated_on FROM notificationtemplates where template_id=:id</sql>
    <param name="id" paramType="SCALAR" sqlType="STRING" />
    <result useColumnNumbers="true" outputType="json">{
 
    "Notification":{
      "template_id":"$1",
      "template_name":"$2",
      "language_id":"$3",
      "is_dynamic":"$4",
      "template_content":"$5",
      "parameters":"$6",
      "is_enabled":"$7",
      "updated_on":"$8"
    }
    
}</result>
  </query>
  <query id="ApiLogsQuery" useConfig="MySQLConnection">
    <sql>insert into SYS_REQ_LOG_HANDLER 
(req_id,process_id, process, system_name, api_name, request, http_method, response, status, updated_on) 
values (:req_id,:process_id,:process,:system,:api_name,:request,:http_method,:response,:status, CURRENT_TIMESTAMP);</sql>
    <param type="IN" name="req_id" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="process_id" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="process" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="system" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="api_name" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="request" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="http_method" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="response" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="status" paramType="SCALAR" sqlType="STRING" optional="false" />
  </query>
  <query id="smseLogsQuery" useConfig="MySQLConnection">
    <sql>insert into sms_smse_log (req_id, msisdn, request, response, status, updated_on) 
values(:req_id,:msisdn,:request,:response,:status,current_timestamp());</sql>
    <param type="IN" name="req_id" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="msisdn" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="request" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="response" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="status" paramType="SCALAR" sqlType="STRING" optional="false" />
  </query>
  <query id="updateApiLogsQuery" useConfig="MySQLConnection">
    <sql>update SYS_REQ_LOG_HANDLER set response=?, updated_on=current_timestamp() where process_id=?</sql>
    <param name="response" paramType="SCALAR" sqlType="STRING" />
    <param name="process_id" paramType="SCALAR" sqlType="STRING" />
  </query>
  <query id="updateSMSLogsQuery" useConfig="MySQLConnection">
    <sql>update sms_smse_log set response = ?,status=?, updated_on=current_timestamp() where req_id=?</sql>
    <param name="response" paramType="SCALAR" sqlType="STRING" />
    <param name="status" paramType="SCALAR" sqlType="STRING" />
    <param name="req_id" paramType="SCALAR" sqlType="STRING" />
  </query>
  <operation name="getBasedonId" returnRequestStatus="true">
    <call-query href="getById">
      <with-param name="id" query-param="id" />
    </call-query>
  </operation>
  <operation name="ApiLogHandler" returnRequestStatus="true">
    <call-query href="ApiLogsQuery">
      <with-param name="req_id" query-param="req_id" />
      <with-param name="process_id" query-param="process_id" />
      <with-param name="process" query-param="process" />
      <with-param name="system" query-param="system" />
      <with-param name="api_name" query-param="api_name" />
      <with-param name="request" query-param="request" />
      <with-param name="http_method" query-param="http_method" />
      <with-param name="response" query-param="response" />
      <with-param name="status" query-param="status" />
    </call-query>
  </operation>
  <operation name="smseLogHandler" disableStreaming="true">
    <call-query href="smseLogsQuery">
      <with-param name="req_id" query-param="req_id" />
      <with-param name="msisdn" query-param="msisdn" />
      <with-param name="request" query-param="request" />
      <with-param name="response" query-param="response" />
      <with-param name="status" query-param="status" />
    </call-query>
  </operation>
  <operation name="updateApiLogHandler">
    <call-query href="updateApiLogsQuery">
      <with-param name="response" query-param="response" />
      <with-param name="process_id" query-param="process_id" />
    </call-query>
  </operation>
  <operation name="updateSMSLogHandler" returnRequestStatus="true">
    <call-query href="updateSMSLogsQuery">
      <with-param name="response" query-param="response" />
      <with-param name="req_id" query-param="req_id" />
      <with-param name="status" query-param="status" />
    </call-query>
  </operation>
  <resource method="GET" path="/NTF/{id}">
    <description />
    <call-query href="getById">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
</data>
