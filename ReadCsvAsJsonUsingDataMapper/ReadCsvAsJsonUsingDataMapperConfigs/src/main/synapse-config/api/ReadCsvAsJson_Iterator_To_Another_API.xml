<?xml version="1.0" encoding="UTF-8"?>
<api context="/readcsvasjsontoanothercall" name="ReadCsvAsJson_Iterator_To_Another_API" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET">
        <inSequence>
            <file.read configKey="ReadCsvAsJson_Con">
                <path>E:/jsondata/details.csv</path>
                <readMode>Complete File</readMode>
                <startLineNum>0</startLineNum>
                <endLineNum>0</endLineNum>
                <lineNum>0</lineNum>
                <contentType>text/plain</contentType>
                <includeResultTo>Message Body</includeResultTo>
                <enableStreaming>false</enableStreaming>
                <enableLock>false</enableLock>
            </file.read>
            <datamapper config="gov:datamapper/ReadCSvAsJson.dmc" inputSchema="gov:datamapper/ReadCSvAsJson_inputSchema.json" inputType="CSV" outputSchema="gov:datamapper/ReadCSvAsJson_outputSchema.json" outputType="JSON" xsltStyleSheet="gov:datamapper/ReadCSvAsJson_xsltStyleSheet.xml"/>
            <log level="custom">
                <property expression="$body/*" name="body"/>
            </log>
            <iterate expression="//Jsondata" sequential="true">
                <target>
                    <sequence>
                        <log level="custom">
                            <property expression="json-eval($.Jsondata.Name)" name="Iterate Log==>"/>
                        </log>
                        <payloadFactory media-type="json">
                            <format>{&#xd;
"Data":"Requested Customer Name is $1"&#xd;
}</format>
                            <args>
                                <arg evaluator="json" expression="$.Jsondata.Name"/>
                            </args>
                        </payloadFactory>
                        <call>
                            <endpoint>
                                <http method="post" uri-template="http://localhost:8290/helloworld">
                                    <suspendOnFailure>
                                        <initialDuration>-1</initialDuration>
                                        <progressionFactor>-1</progressionFactor>
                                        <maximumDuration>0</maximumDuration>
                                    </suspendOnFailure>
                                    <markForSuspension>
                                        <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                    </markForSuspension>
                                </http>
                            </endpoint>
                        </call>
                    </sequence>
                </target>
            </iterate>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
